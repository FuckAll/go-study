// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package protobufrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type String struct {
	Value                string   `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_40b08dfa8d5dacd7, []int{0}
}
func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (dst *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(dst, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Message struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_40b08dfa8d5dacd7, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Message) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

var E_DefaultString = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50000,
	Name:          "protobufrpc.default_string",
	Tag:           "bytes,50000,opt,name=default_string,json=defaultString",
	Filename:      "hello.proto",
}

var E_DefaultInt = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         50001,
	Name:          "protobufrpc.default_int",
	Tag:           "varint,50001,opt,name=default_int,json=defaultInt",
	Filename:      "hello.proto",
}

func init() {
	proto.RegisterType((*String)(nil), "protobufrpc.String")
	proto.RegisterType((*Message)(nil), "protobufrpc.Message")
	proto.RegisterExtension(E_DefaultString)
	proto.RegisterExtension(E_DefaultInt)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HelloService service

type HelloServiceClient interface {
	Hello(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	Channel(ctx context.Context, opts ...grpc.CallOption) (HelloService_ChannelClient, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) Hello(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := grpc.Invoke(ctx, "/protobufrpc.HelloService/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloServiceClient) Channel(ctx context.Context, opts ...grpc.CallOption) (HelloService_ChannelClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_HelloService_serviceDesc.Streams[0], c.cc, "/protobufrpc.HelloService/Channel", opts...)
	if err != nil {
		return nil, err
	}
	x := &helloServiceChannelClient{stream}
	return x, nil
}

type HelloService_ChannelClient interface {
	Send(*String) error
	Recv() (*String, error)
	grpc.ClientStream
}

type helloServiceChannelClient struct {
	grpc.ClientStream
}

func (x *helloServiceChannelClient) Send(m *String) error {
	return x.ClientStream.SendMsg(m)
}

func (x *helloServiceChannelClient) Recv() (*String, error) {
	m := new(String)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for HelloService service

type HelloServiceServer interface {
	Hello(context.Context, *String) (*String, error)
	Channel(HelloService_ChannelServer) error
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufrpc.HelloService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).Hello(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloService_Channel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HelloServiceServer).Channel(&helloServiceChannelServer{stream})
}

type HelloService_ChannelServer interface {
	Send(*String) error
	Recv() (*String, error)
	grpc.ServerStream
}

type helloServiceChannelServer struct {
	grpc.ServerStream
}

func (x *helloServiceChannelServer) Send(m *String) error {
	return x.ServerStream.SendMsg(m)
}

func (x *helloServiceChannelServer) Recv() (*String, error) {
	m := new(String)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobufrpc.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloService_Hello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Channel",
			Handler:       _HelloService_Channel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "hello.proto",
}

// Client API for AuthTestService service

type AuthTestServiceClient interface {
	NeedAuth(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
}

type authTestServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthTestServiceClient(cc *grpc.ClientConn) AuthTestServiceClient {
	return &authTestServiceClient{cc}
}

func (c *authTestServiceClient) NeedAuth(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := grpc.Invoke(ctx, "/protobufrpc.AuthTestService/NeedAuth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthTestService service

type AuthTestServiceServer interface {
	NeedAuth(context.Context, *String) (*String, error)
}

func RegisterAuthTestServiceServer(s *grpc.Server, srv AuthTestServiceServer) {
	s.RegisterService(&_AuthTestService_serviceDesc, srv)
}

func _AuthTestService_NeedAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTestServiceServer).NeedAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobufrpc.AuthTestService/NeedAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTestServiceServer).NeedAuth(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthTestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobufrpc.AuthTestService",
	HandlerType: (*AuthTestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NeedAuth",
			Handler:    _AuthTestService_NeedAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_hello_40b08dfa8d5dacd7) }

var fileDescriptor_hello_40b08dfa8d5dacd7 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0xc9, 0xd7, 0xa6, 0xfd, 0xbc, 0xf5, 0x0f, 0x8c, 0x22, 0xa1, 0x60, 0x29, 0x5d, 0x75,
	0x95, 0x6a, 0x15, 0x04, 0x57, 0xb6, 0x42, 0xd5, 0x85, 0x0a, 0xa9, 0x7b, 0x99, 0x26, 0xb7, 0x93,
	0x81, 0x71, 0x26, 0xcc, 0x4c, 0xba, 0x70, 0xe9, 0x42, 0x7c, 0xa1, 0xbe, 0x87, 0xbe, 0x91, 0x64,
	0x92, 0x88, 0x0b, 0xc1, 0xae, 0x86, 0x7b, 0xe6, 0x9c, 0xdf, 0x3d, 0x5c, 0xe8, 0xa4, 0x28, 0x84,
	0x0a, 0x33, 0xad, 0xac, 0x22, 0x1d, 0xf7, 0x2c, 0xf2, 0xa5, 0xce, 0xe2, 0x6e, 0x9f, 0x29, 0xc5,
	0x04, 0x8e, 0x6a, 0x6d, 0x94, 0xa0, 0x89, 0x35, 0xcf, 0xac, 0xd2, 0xa5, 0x7d, 0xd0, 0x83, 0xd6,
	0xdc, 0x6a, 0x2e, 0x19, 0x39, 0x00, 0x7f, 0x45, 0x45, 0x8e, 0x81, 0xd7, 0xf7, 0x86, 0x5b, 0x51,
	0x39, 0x0c, 0x26, 0xd0, 0xbe, 0x43, 0x63, 0x28, 0x43, 0xd2, 0x83, 0xa6, 0xa4, 0xcf, 0xd5, 0xff,
	0x14, 0x5e, 0xd7, 0x41, 0x8b, 0xa9, 0x2c, 0x45, 0x1d, 0x39, 0x9d, 0x1c, 0x42, 0x83, 0x32, 0x0c,
	0xfe, 0xf5, 0xbd, 0xa1, 0x3f, 0x6d, 0xbe, 0xaf, 0x03, 0x88, 0x0a, 0x61, 0xfc, 0x02, 0xdb, 0x37,
	0x45, 0xc1, 0x39, 0xea, 0x15, 0x8f, 0x91, 0x9c, 0x80, 0xef, 0x66, 0xb2, 0x1f, 0xfe, 0xe8, 0x1a,
	0x96, 0x35, 0xba, 0xbf, 0x89, 0xe4, 0x1c, 0xda, 0x57, 0x29, 0x95, 0x12, 0xc5, 0xe6, 0xa1, 0xa1,
	0x77, 0xec, 0x8d, 0xaf, 0x61, 0x6f, 0x92, 0xdb, 0xf4, 0x11, 0x8d, 0xad, 0xd7, 0x9f, 0xc1, 0xff,
	0x7b, 0xc4, 0xa4, 0x90, 0x37, 0x87, 0x5d, 0xcc, 0x60, 0x37, 0xc1, 0x25, 0xcd, 0x85, 0x7d, 0x32,
	0x65, 0xa7, 0xa3, 0xb0, 0x3c, 0xee, 0xb7, 0x3b, 0x9c, 0x71, 0x14, 0xc9, 0x43, 0x66, 0xb9, 0x92,
	0x26, 0xf8, 0x78, 0x6b, 0xb8, 0x3b, 0xee, 0x54, 0xb1, 0x8a, 0x73, 0x09, 0x9d, 0x9a, 0xc3, 0xa5,
	0xfd, 0x0b, 0xf2, 0xe9, 0x20, 0x7e, 0x04, 0x55, 0xe6, 0x56, 0xda, 0x45, 0xcb, 0x59, 0x4f, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xda, 0x32, 0xf6, 0x6b, 0xf6, 0x01, 0x00, 0x00,
}
